[{"D:\\ReactProjects\\forecast-hooks\\src\\components\\MainContainer.jsx":"1","D:\\ReactProjects\\forecast-hooks\\src\\api\\api.js":"2","D:\\ReactProjects\\forecast-hooks\\src\\components\\Main.jsx":"3","D:\\ReactProjects\\forecast-hooks\\src\\components\\Weather.jsx":"4","D:\\ReactProjects\\forecast-hooks\\src\\App.js":"5","D:\\ReactProjects\\forecast-hooks\\src\\loader\\Loader.jsx":"6","D:\\ReactProjects\\forecast-hooks\\src\\reportWebVitals.js":"7","D:\\ReactProjects\\forecast-hooks\\src\\index.js":"8","D:\\ReactProjects\\forecast-hooks\\src\\components\\Searching.jsx":"9","D:\\ReactProjects\\forecast-hooks\\src\\components\\WeeksForecastContainer.jsx":"10","D:\\ReactProjects\\forecast-hooks\\src\\components\\WeekForecast.jsx":"11","D:\\ReactProjects\\forecast-hooks\\src\\components\\WeatherMini\\WeatherMini.jsx":"12"},{"size":3160,"mtime":1609613253710,"results":"13","hashOfConfig":"14"},{"size":644,"mtime":1609613431964,"results":"15","hashOfConfig":"14"},{"size":1294,"mtime":1609579487632,"results":"16","hashOfConfig":"14"},{"size":2107,"mtime":1609612878008,"results":"17","hashOfConfig":"14"},{"size":183,"mtime":1609274783908,"results":"18","hashOfConfig":"14"},{"size":383,"mtime":1609275945705,"results":"19","hashOfConfig":"14"},{"size":362,"mtime":1606642569870,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":1606642569870,"results":"21","hashOfConfig":"14"},{"size":896,"mtime":1609577782196,"results":"22","hashOfConfig":"14"},{"size":2108,"mtime":1609685964266,"results":"23","hashOfConfig":"14"},{"size":1933,"mtime":1609689822463,"results":"24","hashOfConfig":"14"},{"size":1848,"mtime":1609683137910,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"10o1e07",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"D:\\ReactProjects\\forecast-hooks\\src\\components\\MainContainer.jsx",["54","55","56"],"D:\\ReactProjects\\forecast-hooks\\src\\api\\api.js",[],"D:\\ReactProjects\\forecast-hooks\\src\\components\\Main.jsx",[],"D:\\ReactProjects\\forecast-hooks\\src\\components\\Weather.jsx",["57","58"],"import s from './Weather.module.css';\r\n\r\n//ICONS\r\nimport cloudyDay from '../img/cloudy-day.svg';\r\nimport cloudyNight from '../img/cloudy-night.svg';\r\nimport thunder from '../img/thunder.svg';\r\nimport drizzle from '../img/drizzle.svg';\r\nimport rainy from '../img/rainy.svg';\r\nimport snow from '../img/snowy.svg';\r\nimport clearDay from '../img/day.svg';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst Weather = (props) => {\r\n    let img;\r\n    switch (props.icon){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherBlock} onClick = { () => props.setWeekForecast( { isOpen: true, city: props.name } ) }>\r\n            <div className = {s.weather}>\r\n                {props.deleteCity && \r\n                <div className = {s.delete}>\r\n                  <button className = {s.button} onClick = { () => props.deleteCity(props.name) } > X </button>\r\n                </div>\r\n                }\r\n                <div className = {s.location}>\r\n                    {props.name}\r\n                </div>\r\n                <div className = {s.mainInfo}>\r\n                    <div className = {s.img}>\r\n                        <img src = {img} alt=\"\"/>\r\n                    </div>\r\n                    <div className = {s.temp}>\r\n                        {Math.round(props.temp) + '°C'}\r\n                    </div>\r\n                </div>\r\n                <div className = {s.weatherType}>{props.weather}</div>\r\n                <div className = {s.feelsLike}>Ощущается как: {Math.round(props.feels_like)}°C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","D:\\ReactProjects\\forecast-hooks\\src\\App.js",[],"D:\\ReactProjects\\forecast-hooks\\src\\loader\\Loader.jsx",[],"D:\\ReactProjects\\forecast-hooks\\src\\reportWebVitals.js",[],"D:\\ReactProjects\\forecast-hooks\\src\\index.js",[],["59","60"],"D:\\ReactProjects\\forecast-hooks\\src\\components\\Searching.jsx",[],"D:\\ReactProjects\\forecast-hooks\\src\\components\\WeeksForecastContainer.jsx",["61","62","63"],"D:\\ReactProjects\\forecast-hooks\\src\\components\\WeekForecast.jsx",["64","65"],"import s from './WeeksForecast.module.css';\r\nimport WeatherMini from './WeatherMini/WeatherMini';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst WeekForecast = (props) => {\r\n    return(\r\n        <>\r\n        <div className = {s.weeksForecast}>\r\n            {props.week.length > 0 \r\n            ? \r\n                <div className=\"container\">\r\n                    <div className = {s.title}>\r\n                        { props.city }\r\n                    </div>\r\n\r\n                    {props.week.map( day => {\r\n                    if( !(day.data.length > 0) || ( day.day == new Date().toLocaleString(\"ru\", { weekday: \"long\" }) ) ) return;\r\n                    return(\r\n                        <div className = {s.day}>\r\n                            <div className = {s.dayTitle}>\r\n                                {day.day}\r\n                            </div>\r\n                            <div className = {s.dayItems}>\r\n                                <Swiper\r\n                                spaceBetween = {50} \r\n                                slidesPerView = {1}\r\n                                initialSlide = {4}\r\n                                breakpoints = { {\r\n                                    600 : {slidesPerView:2}\r\n                                    }}>\r\n                                    {day.data.map( (item) =>\r\n                                    <SwiperSlide >\r\n                                        <WeatherMini data = {item} /> \r\n                                    </SwiperSlide> \r\n                                    )}\r\n                                </Swiper>    \r\n                            </div>  \r\n                        </div> ) \r\n                    })\r\n                    }\r\n            </div>\r\n            : <Loader /> }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeekForecast;","D:\\ReactProjects\\forecast-hooks\\src\\components\\WeatherMini\\WeatherMini.jsx",["66"],"import s from './WeatherMini.module.css';\r\n\r\n// ICONS\r\nimport cloudyDay from '../../img/cloudy-day.svg';\r\nimport cloudyNight from '../../img/cloudy-night.svg';\r\nimport thunder from '../../img/thunder.svg';\r\nimport drizzle from '../../img/drizzle.svg';\r\nimport rainy from '../../img/rainy.svg';\r\nimport snow from '../../img/snowy.svg';\r\nimport clearDay from '../../img/day.svg';\r\n\r\nconst WeatherMini = (props) => {\r\n    let img;\r\n    switch (props.data.weather.main){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherMini}>\r\n            <div className = {s.time}>\r\n                {props.data.time}\r\n            </div>\r\n            <div className = {s.info}>\r\n                <div className = {s.img}>\r\n                    <img src = {img} alt=\"\"/>\r\n                </div>\r\n                <div className = {s.temp}>\r\n                    {Math.round(props.data.temp) + \"°C\"}\r\n                </div>\r\n            </div>\r\n            <div className = {s.weather}>\r\n                <p className = {s.description}>\r\n                    {props.data.weather.description}\r\n                </p>\r\n                <p className = {s.description}>\r\n                    {\"Ощущается как: \" + Math.round(props.data.feels_like)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherMini;",{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":36,"column":8,"nodeType":"73","endLine":36,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":43,"column":46,"nodeType":"77","messageId":"78","endLine":43,"endColumn":48},{"ruleId":"67","severity":1,"message":"79","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},{"ruleId":"67","severity":1,"message":"80","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":8,"column":19,"nodeType":"77","messageId":"78","endLine":8,"endColumn":21},{"ruleId":"71","severity":1,"message":"85","line":49,"column":8,"nodeType":"73","endLine":49,"endColumn":10,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"76","line":19,"column":61,"nodeType":"77","messageId":"78","endLine":19,"endColumn":63},{"ruleId":"87","severity":1,"message":"88","line":19,"column":121,"nodeType":"89","messageId":"90","endLine":19,"endColumn":128},{"ruleId":"67","severity":1,"message":"79","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherByName'. Either include it or remove the dependency array.","ArrayExpression",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cloudyDay' is defined but never used.","'Loader' is defined but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"React Hook useEffect has a missing dependency: 'props.city'. Either include it or remove the dependency array.",["94"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [getWeatherByName]",{"range":"99","text":"100"},"Update the dependencies array to be: [props.city]",{"range":"101","text":"102"},[1366,1368],"[getWeatherByName]",[1866,1868],"[props.city]"]